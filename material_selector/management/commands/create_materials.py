from django.core.management.base import BaseCommand
from django.db import transaction

from material_selector.models import MaterialComponent, Material, MaterialPrice, MaterialType


material = {
    "Алюміній": {
        "Хімічний склад": "Алюміній",
        "Міцність і довговічність": 3,
        "Зносостійкість": 4,
        "Біосумісність":  5,
        "Стійкість до корозії": 3,
        "тип": "Метал",
        "Модуль пружності":  2,

     },
     "Титан": {
        "Хімічний склад": "Залізо, Вуглець",
        "Міцність і довговічність": 6,
        "Зносостійкість": 6,
        "Біосумісність":  5,
        "Стійкість до корозії": 6,
        "тип": "Метал",
        "Модуль пружності":  4,
     },
     "Нержавіюча сталь": {
        "Хімічний склад": "Хром, Нікель, Марганець, Молібден, Кремній, Азот, Фосфор, Вуглець, Сірка",
        "Міцність і довговічність": 4,
        "Біосумісність":  4,
        "Зносостійкість":4,
        "Стійкість до корозії": 4,
        "тип": "Метал",
        "Модуль пружності":  4,
     },
     "Кобальт-хром": {
        "Хімічний склад": "Кобальт, Хром, Молібден, Марганець, Кремній, Залізо, Нікель, Вуглець, Азот, Вольфрам, Фосфор, Сірка, Бор",
        "Міцність і довговічність": 5,
        "Зносостійкість": 5,
        "Біосумісність":  4,
        "Стійкість до корозії": 4,
        "тип": "Метал",
        "Модуль пружності": 6,
     },
    "Поліетилен": {
        "Хімічний склад": "Кремній, Алюміній, Кальцій, Фосфор, Залізо, Цирконій, Силіцій",
        "Біосумісність":  5,
        "Міцність і довговічність":  5,
        "Зносостійкість":  5,
        "Модуль пружності": 5,
        "Стійкість до корозії": 6,
        "тип": "Кераміка"
    },
    "Силікон": {
        "тип": "Еластомер",
        "Хімічний склад": "Кремній, Кисень",
        "Біосумісність": 5,
        "Міцність і довговічність": 4,
        "Зносостійкість": 4,
        "Модуль пружності": 2,
        "Ціна та доступність": 4,
        "Стійкість до корозії": 2,
    },
    "Термопластичні еластомери (TPE)": {
        "тип": "Еластомер",
        "Хімічний склад": "Вуглець, Гідроген",
        "Біосумісність": 5,
        "Міцність і довговічність": 4,
        "Зносостійкість": 4,
        "Модуль пружності": 2,
        "Стійкість до корозії": 5,
    },
    "Поліуретан": {
        "тип": "Еластомер",
        "Хімічний склад": "Вуглець, Кисень, Азот, Гідроген",
        "Біосумісність": 5,
        "Міцність і довговічність": 5,
        "Зносостійкість": 5,
        "Модуль пружності": 5,
        "Стійкість до корозії": 5,
    },
    "Етиленвінілацетат (EVA)": {
        "тип": "Еластомер",
        "Хімічний склад": "Вуглець, Гідроген, Кисень",
        "Біосумісність": 5,
        "Міцність і довговічність": 4,
        "Зносостійкість": 4,
        "Модуль пружності": 2,
        "Ціна та доступність": 4,
        "Стійкість до корозії": 5,
    },
    "Поліпропілен": {
        "тип": "Пластик",
        "Хімічний склад": "Вуглець, Гідроген, Кисень, Азот",
        "Біосумісність": 5,
        "Міцність і довговічність": 5,
        "Зносостійкість": 5,
        "Модуль пружності": 5,
        "Стійкість до корозії": 5,
    },
    "Алюміній оксид": {
        "тип": "Пластик",
        "Хімічний склад": "Вуглець, Гідроген, Кисень, Азот",
        "Біосумісність": 6,
        "Міцність і довговічність": 5,
        "Зносостійкість": 5,
        "Модуль пружності": 5,
        "Стійкість до корозії": 5,
    },
    "Цирконій оксид": {
        "тип": "Пластик",
        "Хімічний склад": "Вуглець, Гідроген, Кисень, Азот",
        "Біосумісність": 6,
        "Міцність і довговічність": 6,
        "Зносостійкість": 5,
        "Модуль пружності": 5,
        "Стійкість до корозії": 5,
    },
}



class Command(BaseCommand):
    help = 'Populates Material, MaterialType, and MaterialComponent models with initial data'


    def handle(self, *args, **kwargs):
        
        with transaction.atomic():

            components = set()

            for _, properties in material.items():
                chemical_composition = properties.get("Хімічний склад", "")
                elements = chemical_composition.split(", ")
                components.update(elements)
        
            types = ['Метал', 'Кераміка', 'Пластик', 'Еластомер']
            
            #create material component objects
            for element in components:
                MaterialComponent.objects.create(name=element)
            
            # create material type objects
            for element in types:
                MaterialType.objects.create(name=element)
                
                
            # create materials
            for key, value in material.items():
                material_obj = Material.objects.create(
                    name=key,
                    material_type=MaterialType.objects.get(name=value['тип']),
                    bio_compatibility=value['Біосумісність'],
                    strength_durability=value['Міцність і довговічність'],
                    wear_resistance=value['Зносостійкість'],
                    elasticity_modulus=value['Модуль пружності'],
                    corrosion_resistance=value['Стійкість до корозії']
                )
                
                material_obj.material_component.set(MaterialComponent.objects.filter(name__in=value['Хімічний склад'].split(', ')))